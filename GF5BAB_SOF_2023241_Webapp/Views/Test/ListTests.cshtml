@using Microsoft.AspNetCore.Identity
@model IEnumerable<Test>
@inject SignInManager<SiteUser> SignInManager
@inject UserManager<SiteUser> UserManager

<div>
    @if (TempData["DeleteSuccessMessage"] != null)
    {
        <div class="alert alert-success" id="delete-success-alert">
            @TempData["DeleteSuccessMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" id="success-alert">
            @TempData["SuccessMessage"]
        </div>
    }

    <ul>
        @foreach (var tests in Model.GroupBy(t => t.Name))
        {
            <li class="name">
                Name: @tests.Key
                <ul>
                    @foreach (var item in tests)
                    {
                        <li class="engineer">
                            Part: @item.PartName <br />
                            Start: @item.StartingTime <br />
                            End: @item.EndingTime <br />
                            Added by -@item.Driver.FirstName @item.Driver.LastName
                            @if (item.DriverId == UserManager.GetUserId(User))
                            {
                                <a href="/Test/DeleteTest?uid=@item.Uid" class="btn btn-danger">Delete</a>
                            }
                        </li>
                    }
                </ul>
            </li>
        }

    </ul>
</div>

<script>

    function hideAlert() {
        $('#success-alert').alert('close');
        $.ajax({
            url: '/Test/ResetSuccessMessage',
            method: 'POST',
            success: function () {
            }
        });
    }

    setTimeout(hideAlert, 5000);
</script>

<script>
    function hideDeleteSuccessAlert() {
        $('#delete-success-alert').alert('close');
        $.ajax({
            url: '/Test/ResetDeleteSuccessMessage',
            method: 'POST',
            success: function () {
            }
        });
    }

    setTimeout(hideDeleteSuccessAlert, 5000);
</script>

